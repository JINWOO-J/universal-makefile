name: Publish Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REPO_HUB: jinwoo
  NAME: box
  ROLE: frontend

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.vars.outputs.image_name }}
      tag_name: ${{ steps.vars.outputs.tag_name }}
    steps:
      - name: Set up dynamic variables
        id: vars
        run: |
          # github.ref_name은 푸시된 태그 이름(예: v1.2.3)을 의미합니다.
          echo "image_name=${{ env.REPO_HUB }}/${{ env.NAME }}-app" >> $GITHUB_OUTPUT
          echo "tag_name=${{ env.ROLE }}-${{ github.ref_name }}" >> $GITHUB_OUTPUT

  notify-start:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Send Start Notification to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_ICON_EMOJI: ':tada:'
          SLACK_COLOR: '#b394ff'
          SLACK_MESSAGE: |
            *Production release has started!*
            - *Tag*: `${{ needs.setup.outputs.image_name }}:${{ needs.setup.outputs.tag_name }}`
            - *Triggered by*: `${{ github.actor }}`
          SLACK_FOOTER: ' '
          SLACK_TITLE: 'View Workflow Run'
          SLACK_TITLE_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build, Push, and Tag Latest via Make
        run: make build push
        env:
          REPO_HUB: ${{ env.REPO_HUB }}
          NAME: ${{ env.NAME }}
          TAGNAME: ${{ needs.setup.outputs.tag_name }}

  notify-finish:
    runs-on: ubuntu-latest
    needs: [setup, build-and-push]
    if: always()
    steps:
      - name: Send Finish Notification to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_ICON_EMOJI: ':github:'
          SLACK_COLOR: ${{ needs.build-and-push.result == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: |
            *Production release finished with status: `${{ needs.build-and-push.result }}`*
            - *Tag*: `${{ needs.setup.outputs.image_name }}:${{ needs.setup.outputs.tag_name }}`
            - *Triggered by*: `${{ github.actor }}`
          SLACK_FOOTER: ' '
          SLACK_TITLE: 'View Workflow Run'
          SLACK_TITLE_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
